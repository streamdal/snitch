// DO NOT EDIT. This file is generated by Fresh.
// This file SHOULD be checked into source version control.
// This file is automatically updated during development when running `dev.ts`.

import * as $_500 from "./routes/_500.tsx";
import * as $_app from "./routes/_app.tsx";
import * as $_layout from "./routes/_layout.tsx";
import * as $_middleware from "./routes/_middleware.ts";
import * as $configs from "./routes/configs.tsx";
import * as $demo_http_echo from "./routes/demo/http/echo.tsx";
import * as $demo_http_index from "./routes/demo/http/index.tsx";
import * as $email from "./routes/email.tsx";
import * as $index from "./routes/index.tsx";
import * as $notifications_id_delete from "./routes/notifications/[id]/delete.tsx";
import * as $notifications_id_index from "./routes/notifications/[id]/index.tsx";
import * as $notifications_add from "./routes/notifications/add.tsx";
import * as $notifications_index from "./routes/notifications/index.tsx";
import * as $notifications_save from "./routes/notifications/save.tsx";
import * as $partials_index from "./routes/partials/index.tsx";
import * as $partials_notifications_id_index from "./routes/partials/notifications/[id]/index.tsx";
import * as $partials_notifications_add from "./routes/partials/notifications/add.tsx";
import * as $partials_notifications_index from "./routes/partials/notifications/index.tsx";
import * as $partials_pipelines_id_index from "./routes/partials/pipelines/[id]/index.tsx";
import * as $partials_pipelines_add from "./routes/partials/pipelines/add.tsx";
import * as $partials_pipelines_index from "./routes/partials/pipelines/index.tsx";
import * as $partials_tail_id_index from "./routes/partials/tail/[id]/index.tsx";
import * as $pipelines_id_delete from "./routes/pipelines/[id]/delete.tsx";
import * as $pipelines_id_index from "./routes/pipelines/[id]/index.tsx";
import * as $pipelines_add from "./routes/pipelines/add.tsx";
import * as $pipelines_index from "./routes/pipelines/index.tsx";
import * as $pipelines_save from "./routes/pipelines/save.tsx";
import * as $service_service_component_component_operationType_op_operationName_delete from "./routes/service/[service]/component/[component]/[operationType]/op/[operationName]/delete.tsx";
import * as $service_service_component_component_operationType_op_operationName_pipeline_id_attach from "./routes/service/[service]/component/[component]/[operationType]/op/[operationName]/pipeline/[id]/attach.tsx";
import * as $service_service_component_component_operationType_op_operationName_pipeline_id_detach from "./routes/service/[service]/component/[component]/[operationType]/op/[operationName]/pipeline/[id]/detach.tsx";
import * as $service_service_component_component_operationType_op_operationName_pipeline_id_pause from "./routes/service/[service]/component/[component]/[operationType]/op/[operationName]/pipeline/[id]/pause.tsx";
import * as $service_service_component_component_operationType_op_operationName_pipeline_id_resume from "./routes/service/[service]/component/[component]/[operationType]/op/[operationName]/pipeline/[id]/resume.tsx";
import * as $service_service_component_component_operationType_op_operationName_schema from "./routes/service/[service]/component/[component]/[operationType]/op/[operationName]/schema.tsx";
import * as $service_service_delete from "./routes/service/[service]/delete.tsx";
import * as $tail_id_index from "./routes/tail/[id]/index.tsx";
import * as $ws_audience_metrics from "./routes/ws/audience-metrics.tsx";
import * as $ws_demo_http_request from "./routes/ws/demo/http-request.tsx";
import * as $ws_server_error from "./routes/ws/server-error.tsx";
import * as $ws_service_map from "./routes/ws/service-map.tsx";
import * as $ws_tail from "./routes/ws/tail.tsx";
import * as $demo_http_request from "./islands/demo/http-request.tsx";
import * as $drawer_component from "./islands/drawer/component.tsx";
import * as $drawer_infoDrawer from "./islands/drawer/infoDrawer.tsx";
import * as $drawer_operation from "./islands/drawer/operation.tsx";
import * as $drawer_schema from "./islands/drawer/schema.tsx";
import * as $drawer_service from "./islands/drawer/service.tsx";
import * as $drawer_tail from "./islands/drawer/tail.tsx";
import * as $emailCollectionForm from "./islands/emailCollectionForm.tsx";
import * as $nav from "./islands/nav.tsx";
import * as $notification from "./islands/notification.tsx";
import * as $notifications from "./islands/notifications.tsx";
import * as $pipelines_pipeline from "./islands/pipelines/pipeline.tsx";
import * as $pipelines_pipelineActionMenu from "./islands/pipelines/pipelineActionMenu.tsx";
import * as $pipelines_pipelineHTTP from "./islands/pipelines/pipelineHTTP.tsx";
import * as $pipelines_pipelineSchemaValidation from "./islands/pipelines/pipelineSchemaValidation.tsx";
import * as $pipelines_pipelineTransform from "./islands/pipelines/pipelineTransform.tsx";
import * as $pipelines_pipelines from "./islands/pipelines/pipelines.tsx";
import * as $pipelines_stepCondition from "./islands/pipelines/stepCondition.tsx";
import * as $pipelines_stepConditions from "./islands/pipelines/stepConditions.tsx";
import * as $pipelines_stepNotification from "./islands/pipelines/stepNotification.tsx";
import * as $pipelines_stepNotifications from "./islands/pipelines/stepNotifications.tsx";
import * as $serviceDisplay from "./islands/serviceDisplay.tsx";
import * as $sockets from "./islands/sockets.tsx";
import { type Manifest } from "$fresh/server.ts";

const manifest = {
  routes: {
    "./routes/_500.tsx": $_500,
    "./routes/_app.tsx": $_app,
    "./routes/_layout.tsx": $_layout,
    "./routes/_middleware.ts": $_middleware,
    "./routes/configs.tsx": $configs,
    "./routes/demo/http/echo.tsx": $demo_http_echo,
    "./routes/demo/http/index.tsx": $demo_http_index,
    "./routes/email.tsx": $email,
    "./routes/index.tsx": $index,
    "./routes/notifications/[id]/delete.tsx": $notifications_id_delete,
    "./routes/notifications/[id]/index.tsx": $notifications_id_index,
    "./routes/notifications/add.tsx": $notifications_add,
    "./routes/notifications/index.tsx": $notifications_index,
    "./routes/notifications/save.tsx": $notifications_save,
    "./routes/partials/index.tsx": $partials_index,
    "./routes/partials/notifications/[id]/index.tsx":
      $partials_notifications_id_index,
    "./routes/partials/notifications/add.tsx": $partials_notifications_add,
    "./routes/partials/notifications/index.tsx": $partials_notifications_index,
    "./routes/partials/pipelines/[id]/index.tsx": $partials_pipelines_id_index,
    "./routes/partials/pipelines/add.tsx": $partials_pipelines_add,
    "./routes/partials/pipelines/index.tsx": $partials_pipelines_index,
    "./routes/partials/tail/[id]/index.tsx": $partials_tail_id_index,
    "./routes/pipelines/[id]/delete.tsx": $pipelines_id_delete,
    "./routes/pipelines/[id]/index.tsx": $pipelines_id_index,
    "./routes/pipelines/add.tsx": $pipelines_add,
    "./routes/pipelines/index.tsx": $pipelines_index,
    "./routes/pipelines/save.tsx": $pipelines_save,
    "./routes/service/[service]/component/[component]/[operationType]/op/[operationName]/delete.tsx":
      $service_service_component_component_operationType_op_operationName_delete,
    "./routes/service/[service]/component/[component]/[operationType]/op/[operationName]/pipeline/[id]/attach.tsx":
      $service_service_component_component_operationType_op_operationName_pipeline_id_attach,
    "./routes/service/[service]/component/[component]/[operationType]/op/[operationName]/pipeline/[id]/detach.tsx":
      $service_service_component_component_operationType_op_operationName_pipeline_id_detach,
    "./routes/service/[service]/component/[component]/[operationType]/op/[operationName]/pipeline/[id]/pause.tsx":
      $service_service_component_component_operationType_op_operationName_pipeline_id_pause,
    "./routes/service/[service]/component/[component]/[operationType]/op/[operationName]/pipeline/[id]/resume.tsx":
      $service_service_component_component_operationType_op_operationName_pipeline_id_resume,
    "./routes/service/[service]/component/[component]/[operationType]/op/[operationName]/schema.tsx":
      $service_service_component_component_operationType_op_operationName_schema,
    "./routes/service/[service]/delete.tsx": $service_service_delete,
    "./routes/tail/[id]/index.tsx": $tail_id_index,
    "./routes/ws/audience-metrics.tsx": $ws_audience_metrics,
    "./routes/ws/demo/http-request.tsx": $ws_demo_http_request,
    "./routes/ws/server-error.tsx": $ws_server_error,
    "./routes/ws/service-map.tsx": $ws_service_map,
    "./routes/ws/tail.tsx": $ws_tail,
  },
  islands: {
    "./islands/demo/http-request.tsx": $demo_http_request,
    "./islands/drawer/component.tsx": $drawer_component,
    "./islands/drawer/infoDrawer.tsx": $drawer_infoDrawer,
    "./islands/drawer/operation.tsx": $drawer_operation,
    "./islands/drawer/schema.tsx": $drawer_schema,
    "./islands/drawer/service.tsx": $drawer_service,
    "./islands/drawer/tail.tsx": $drawer_tail,
    "./islands/emailCollectionForm.tsx": $emailCollectionForm,
    "./islands/nav.tsx": $nav,
    "./islands/notification.tsx": $notification,
    "./islands/notifications.tsx": $notifications,
    "./islands/pipelines/pipeline.tsx": $pipelines_pipeline,
    "./islands/pipelines/pipelineActionMenu.tsx": $pipelines_pipelineActionMenu,
    "./islands/pipelines/pipelineHTTP.tsx": $pipelines_pipelineHTTP,
    "./islands/pipelines/pipelineSchemaValidation.tsx":
      $pipelines_pipelineSchemaValidation,
    "./islands/pipelines/pipelineTransform.tsx": $pipelines_pipelineTransform,
    "./islands/pipelines/pipelines.tsx": $pipelines_pipelines,
    "./islands/pipelines/stepCondition.tsx": $pipelines_stepCondition,
    "./islands/pipelines/stepConditions.tsx": $pipelines_stepConditions,
    "./islands/pipelines/stepNotification.tsx": $pipelines_stepNotification,
    "./islands/pipelines/stepNotifications.tsx": $pipelines_stepNotifications,
    "./islands/serviceDisplay.tsx": $serviceDisplay,
    "./islands/sockets.tsx": $sockets,
  },
  baseUrl: import.meta.url,
} satisfies Manifest;

export default manifest;
