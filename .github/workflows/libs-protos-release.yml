name: Protos - Release

on:
  push:
    branches:
      - main
    paths:
      - 'libs/protos/**'
      - '.github/workflows/libs-protos-release.yml'

defaults:
  run:
    working-directory: ./libs/protos

jobs:
  build:
    if: ${{ !contains(github.event.head_commit.message, 'norelease') }}
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/streamdal-protos
    steps:
      - uses: actions/checkout@main

      # This is *dry_run* because we only want to generate/learn about the new
      # version so we can update Cargo.toml. If it's not dry_run, the action
      # would create and push a tag against a commit that doesn't have the new
      # version in Cargo.toml.
      - name: Generate new tag (dry run)
        uses: mathieudutour/github-tag-action@v6.1
        id: get_new_version
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          dry_run: true
          fetch_all_tags: true
          tag_prefix: "libs/protos/v"

      - name: Update Cargo.toml version
        run: |
          pwd
          ls -l
          sed -i "s/version = \".*\"/version = \"${{ steps.get_new_version.outputs.new_version }}\"/" build/rust/protos/Cargo.toml
          grep version build/rust/protos/Cargo.toml

      # We do this because other jobs might have written to the repo while this
      # job was running and making local changes; without this pull step, we
      # might run into an error when performing the auto-commit.
      - name: Pull latest changes
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git pull --depth=10

      # Commit the updated Cargo.toml
      - uses: stefanzweifel/git-auto-commit-action@v4
        id: auto_commit
        with:
          commit_message: Bumped Cargo.toml version to ${{ steps.get_new_version.outputs.new_version }}

      # .. and now create the actual tag (will be the same as the dry run)
      - name: Create tag
        uses: mathieudutour/github-tag-action@v6.1
        id: create_tag
        with:
          commit_sha: ${{ steps.auto_commit.outputs.commit_hash }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.get_new_version.outputs.new_version }}
          tag_prefix: "libs/protos/v"

      - name: Release on crates.io
        uses: actions-rs/cargo@v1
        with:
          command: publish
          # need full path because "working-directory" is used only for "run" steps
          args: --manifest-path libs/protos/build/rust/protos/Cargo.toml --token ${{ secrets.CRATES_IO_TOKEN }} --locked

      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Release on npm
        run: |
          cd build/ts/node
          npm version ${{ steps.get_new_version.outputs.new_version }}
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build python dist
        run: |
          cd build/python
          sed -i "s/version=.*/version='${{ steps.get_new_version.outputs.new_version }}',/" setup.py
          python3 setup.py sdist
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: libs/protos/build/python/dist
          password: ${{ secrets.PYPI_API_TOKEN }}
