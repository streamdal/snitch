name: Console - Release

on:
  push:
    branches:
      - main
    paths:
      - 'apps/console/**'
      - '.github/workflows/apps-console-release.yml'

defaults:
  run:
    working-directory: ./apps/console

jobs:
  release:
    name: Test, build and push Docker image
    if: ${{ !contains(github.event.head_commit.message, 'norelease') }}
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.create_tag.outputs.new_tag }}
    steps:
      - uses: actions/checkout@main

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Check Formatting, Linting, Types & run Test
        run: deno task ok

      - name: Generate new tag (dry run)
        uses: mathieudutour/github-tag-action@v6.1
        id: get_new_version
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          dry_run: true
          fetch_all_tags: true
          tag_prefix: "apps/console/v"

      # We do this because other jobs might have written to the repo while this
      # job was running and making local changes; without this pull step, we
      # might run into an error during auto-commit.
      - name: Pull latest changes
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git pull --depth=10          

      - name: Update console VERSION file
        run: |
          echo ${{ steps.get_new_version.outputs.new_version }} > VERSION

      - uses: stefanzweifel/git-auto-commit-action@v4
        id: auto_commit
        with:
          commit_message: Bumped Console VERSION file to ${{ steps.get_new_version.outputs.new_version }}

      - name: Create tag
        uses: mathieudutour/github-tag-action@v6.1
        id: create_tag
        with:
          commit_sha: ${{ steps.auto_commit.outputs.commit_hash }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.get_new_version.outputs.new_version }}
          tag_prefix: "apps/console/v"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.STREAMDAL_DOCKERHUB_USERNAME }}
          password: ${{ secrets.STREAMDAL_DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./apps/console
          file: ./apps/console/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            streamdal/console:latest
            streamdal/console:${{ steps.get_new_version.outputs.new_version }}
