name: Helm - Release

on:
  push:
    paths:
      - 'docs/install/helm/**'
      - '.github/workflows/docs-install-helm-release.yml'
    branches:
      - main
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.set_output.outputs.sha }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Configure Git
      run: |
        git config user.name "GitHub Actions"
        git config user.email "github-actions@github.com"

    - name: Ensure packages directory exists
      run: |
        mkdir -p docs/install/helm-packages

    - name: Install Helm
      run: |
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
        chmod 700 get_helm.sh
        ./get_helm.sh

    - name: Package Helm Chart
      run: |
        helm package docs/install/helm/streamdal-server -d docs/install/helm-packages
        helm package docs/install/helm/streamdal-operator -d docs/install/helm-packages
        helm package docs/install/helm/streamdal-log-processor -d docs/install/helm-packages

    - name: Update Helm repo index
      run: |
        helm repo index docs/install/helm-packages --url https://streamdal.github.io/streamdal/helm-packages
        git add docs/install/helm-packages/index.yaml
        git add docs/install/helm-packages/*.tgz

    - name: Push changes
      run: |
        git commit -m "norelease: Update Helm chart"
        git push

    - name: Set Output
      id: set_output
      run: echo "::set-output name=sha::$(git rev-parse HEAD)"

  pages:
    needs: release
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.release.outputs.sha }}
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # Upload entire repository
          path: 'docs/install'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
