name: SDK Python - Release

on:
  push:
    branches:
      - main
    paths:
      - 'sdks/python/**'
      - '.github/workflows/sdks-python-release.yml'

defaults:
  run:
    working-directory: ./sdks/python

jobs:
  build:
    name: Tag and Release
    if: ${{ !contains(github.event.head_commit.message, 'norelease') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Generate new tag (dry run)
        uses: mathieudutour/github-tag-action@v6.1
        id: get_new_version
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          dry_run: true
          tag_prefix: "sdks/python/v"

      - name: Inject version into setup.py
        run: |
          sed -i "s/version=\".*\"/version=\"${{ steps.get_new_version.outputs.new_version }}\"/" streamdal/__init__.py
          sed -i "s/version=.*/version='${{ steps.get_new_version.outputs.new_version }}',/" setup.py

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Bumped version in setup.py to ${{ steps.get_new_version.outputs.new_version }}
          branch: main
          tagging_message: ${{ steps.get_new_version.outputs.new_version }}
          push_options: '--force'

      # .. and now create the actual tag (will be the same as the dry run)
      - name: Create tag
        uses: mathieudutour/github-tag-action@v6.1
        id: create_tag
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: "sdks/python/v"

      - name: Generate updated distribution
        run: |
          python3 setup.py sdist

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: ./sdks/python/dist
          password: ${{ secrets.PYPI_API_TOKEN }}
